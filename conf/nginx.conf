worker_processes  auto;
#error_log  logs/error.log;

events {
    worker_connections  1024;
}

# RTMP configuration
rtmp {
    server {
		listen 1935; # Listen on standard RTMP port
		chunk_size 4000; 
		# ping 30s;
		# notify_method get;

		# This application is to accept incoming stream
		application live {
			live on; # Allows live input
			meta on;
			interleave off;
			wait_key on;
			wait_video off;
			drop_idle_publisher 10s; 
			sync 300ms;
			play_restart off;
			idle_streams on;
			publish_notify off;

			# for each received stream, transcode for adaptive streaming
			# This single ffmpeg command takes the input and transforms
			# the source into 4 different streams with different bitrates
			# and qualities. # these settings respect the aspect ratio.
			exec_push  /usr/local/bin/ffmpeg -i rtmp://localhost:1935/$app/$name -async 1 -vsync -1 
            -c:v libx264 -vf "scale=240:trunc(ow/a/2)*2" -c:a aac -b:v 240k  -b:a 64k   -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/show/$name_240p
            -c:v libx264 -vf "scale=360:trunc(ow/a/2)*2" -c:a aac -b:v 400k  -b:a 96k   -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/show/$name_360p
            -c:v libx264 -vf "scale=480:trunc(ow/a/2)*2" -c:a aac -b:v 800k  -b:a 128k  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/show/$name_480p
            -c:v libx264 -vf "scale=720:trunc(ow/a/2)*2" -c:a aac -b:v 1200k -b:a 128k -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/show/$name_720p
            -c:v libx264 -vf "scale=1080:trunc(ow/a/2)*2" -c:a aac -b:v 2200k -b:a 128k -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/show/$name_1080p
            -c copy -f flv rtmp://localhost:1935/show/$name_src;			

		
		}

		# This is the HLS application
		application show {
			live on; # Allows live input from above application
			deny play all; # disable consuming the stream from nginx as rtmp
			
			hls on; # Enable HTTP Live Streaming
			hls_fragment 3;
			hls_playlist_length 20;
			hls_path /mnt/hls/;  # hls fragments path
			# Instruct clients to adjust resolution according to bandwidth
			hls_variant _240p BANDWIDTH=240000;
      hls_variant _360p BANDWIDTH=360000;
      hls_variant _480p BANDWIDTH=480000;
      hls_variant _720p BANDWIDTH=720000;
      hls_variant _1080p BANDWIDTH=1080000;
      hls_variant _src BANDWIDTH=1080000;
			
			
			# MPEG-DASH
			dash on;
			dash_path /mnt/dash/;  # dash fragments path
			dash_fragment 3;
			dash_playlist_length 20;						
		}
	}
}


http {
	sendfile off;
	tcp_nopush on;
	directio 512;
	# aio on;
	
	# HTTP server required to serve the player and HLS fragments
	server {
		listen 8080;
		
		# Serve HLS fragments
		location /hls {
			types {
				application/vnd.apple.mpegurl m3u8;
				video/mp2t ts;
			}
			
			root /mnt;

            add_header Cache-Control no-cache; # Disable cache
			
			# CORS setup
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length';
            
			# allow CORS preflight requests
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			}
		}
		
        # Serve DASH fragments
        location /dash {
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
            }

			root /mnt;
			
			add_header Cache-Control no-cache; # Disable cache


            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # Allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }		
		
		# This URL provides RTMP statistics in XML
		location /stat {
			rtmp_stat all;
			rtmp_stat_stylesheet stat.xsl; # Use stat.xsl stylesheet 
		}

		location /stat.xsl {
			# XML stylesheet to view RTMP stats.
			root /usr/local/nginx/html;
		}

	}
}
